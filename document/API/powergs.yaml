openapi: 3.0.0
info:
  title: POWERGs API
  version: '0.0'
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
  /login:
    post:
      summary: Login ユーザー.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      operationId: post-login
      description: |-
        API for login ユーザー.

        Server response contains authorization token. Client must use this token when invoke other API.

        処理詳細：
        パスワード確認は、cognitoを利用する。
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestBody'
            examples: {}
        description: ''
  /gateways:
    post:
      summary: Create a new gateway
      operationId: post-gateways
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGatewayForProviderRequestBody'
      description: ''
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Get the user from the given authorization token, and check whether the user has permission for creating record.'
  /signup:
    post:
      summary: Create ユーザー.
      tags: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: post-signup
      description: |-
        API for creating ユーザー.

        After server return 200, server sends confirmationCode and password-setting URL to mailaddress in request body.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Get the user from the given authorization token, and check whether the user has permission for creating record.'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Signup'
  /confirm_signup:
    post:
      summary: Send confirmation code and set user own password
      tags: []
      responses:
        '200':
          description: OK
      operationId: post-confirm_signup
      description: |-
        検証コードを確認・ユーザーのパスワードを登録する API。
        cognito で検証コードの作成から検証までを行う。
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmSignupRequestBody'
            examples: {}
        description: The information required for confirm user signup.
  /company_customers:
    post:
      summary: Create 企業 or 需要家
      tags: []
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: post-company_customers
      description: |-
        企業・需要家を作成する API。
        情報は 「{EMS 企業テーブルID}_company_customer」テーブルに保存される。
        company_type で企業タイプを判断する（例：企業もしくは需要家）。各企業タイプに対応する値はモデル CompanyType を参照。
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: 'Get the user from the given authorization token, and check whether the user has permission for creating record.'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyCustomerRequestBody'
            examples: {}
        description: The information required for creating 企業 or 需要家.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    LoginRequestBody:
      title: LoginRequestBody
      type: object
      description: Request body for login ユーザー.
      properties:
        login_id:
          type: string
          maxLength: 254
          example: aaaa@bbbb.cccc.cc
          description: login_id is equal to mailaddress
        password:
          type: string
          pattern: '^[A-Za-z0-9]{8,}$'
          minLength: 8
      required:
        - login_id
        - password
    CreateGatewayForProviderRequestBody:
      title: Gateway for Provider
      type: object
      description: ''
      properties:
        serial_no:
          type: string
          example: '00:80:27:44:BB:AF'
        location_name:
          type: string
          maxLength: 100
        installation_name:
          type: string
          maxLength: 30
        installation_mailaddress:
          type: string
          maxLength: 254
        installation_tel_no:
          type: string
          maxLength: 100
        installation_department:
          type: string
          maxLength: 100
        resource_note:
          type: string
          maxLength: 100
        send_cycle_minute:
          type: number
          minimum: 1
          maximum: 30
      required:
        - serial_no
        - location_name
    Signup:
      title: Signup
      type: object
      description: Request body for creating ユーザー.
      properties:
        mailaddress:
          type: string
          maxLength: 254
          example: aaaa@bbbb.cccc.cc
        name:
          type: string
          maxLength: 30
          example: Y田 T郎
        tel_no:
          type: string
          pattern: '^[0-9]{0,14}'
          maxLength: 14
          example: '09012345678'
        department:
          type: string
          maxLength: 100
          example: ビジネス開発部
        role:
          type: string
          pattern: ^(admin|user)$
          example: admin
        is_administrator:
          type: boolean
        is_alert_mailaddresses:
          type: boolean
        company_customer_id:
          type: string
          example: qety1357qety1357
        group_id1:
          type: string
          description: グループ ID 1
          example: XXXXX
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        is_readonly_group_id1:
          type: boolean
        group_id2:
          type: string
          description: グループ ID 2
          example: XXXXX
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        is_readonly_group_id2:
          type: boolean
        group_id3:
          type: string
          description: グループ ID 3
          example: XXXXX
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        is_readonly_group_id3:
          type: boolean
        group_id4:
          type: string
          description: グループ ID 4
          example: XXXXX
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        is_readonly_group_id4:
          type: boolean
        group_id5:
          type: string
          description: グループ ID 5
          example: XXXXX
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        is_readonly_group_id5:
          type: boolean
      required:
        - mailaddress
        - name
        - tel_no
        - role
        - is_administrator
        - is_alert_mailaddresses
        - company_customer_id
    ConfirmSignupRequestBody:
      title: ConfirmSignupRequestBody
      type: object
      description: Request body for send confirmation code and set password.
      properties:
        mailaddress:
          type: string
          maxLength: 254
          example: aaaa@bbbb.cccc.cc
        confirmation_code:
          type: string
          pattern: '^[0-9]{6}$'
          maxLength: 6
          minLength: 6
          example: '012345'
          description: sever send confirmation code by email
        password:
          type: string
          pattern: '^[A-Za-z0-9]{8,}$'
          minLength: 8
      required:
        - mailaddress
        - confirmation_code
        - password
    CreateCompanyCustomerRequestBody:
      title: CreateCompanyCustomerRequestBody
      type: object
      description: Request body for creating 企業 or 需要家.
      properties:
        company_type:
          $ref: '#/components/schemas/CompanyType'
        name:
          type: string
          maxLength: 30
          example: XXXXX様
          description: お客様名・企業名
        kana:
          type: string
          maxLength: 50
          example: フリカナフリカナ
          description: カナ
        post_code:
          type: string
          pattern: '^[0-9]{7}$'
          maxLength: 7
          example: '1112222'
          description: 郵便番号
          minLength: 7
        address:
          type: string
          maxLength: 100
          example: XXXX都XXX区XXX111-111
          description: 住所
        tel_no1:
          type: string
          maxLength: 14
          pattern: '^[0-9]{0,14}$'
          example: '09012345678'
          description: 電話番号 1
        tel_no2:
          type: string
          maxLength: 14
          pattern: '^[0-9]{0,14}$'
          example: '09012345678'
          description: 電話番号 2
        customer_id:
          type: string
          pattern: '^[A-Za-z0-9_-]{1,20}$'
          maxLength: 20
          description: 外部企業管理 ID。null is acceptable if company_type = 2（運用企業）
          example: XXXXX-XX_XX
          minLength: 1
        main_customer_support_username1:
          type: string
          maxLength: 30
          example: Y山Y太
          description: 主管担当者名 1
        main_customer_support_username2:
          type: string
          maxLength: 30
          example: XXX(株) M川M二
          description: 主管担当者名 2
        service_start_date:
          type: string
          format: date
          example: '2021-12-01'
          description: サービス提供開始日
        payment:
          type: string
          maxLength: 100
          description: 料金情報
        correspond_note:
          type: string
          maxLength: 200
          description: 対応履歴
        memo:
          type: string
          maxLength: 200
          description: 備考
        group_id1:
          type: string
          description: グループ ID 1
          example: XXXXX
          pattern: '^[A-Za-z0-9]{1,30}$'
          maxLength: 30
          minLength: 1
        group_id2:
          type: string
          example: AAAAA
          description: グループ ID 2
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        group_id3:
          type: string
          example: BBBBB
          description: グループ ID 3
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        group_id4:
          type: string
          example: CCCCC
          description: グループ ID 4
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
        group_id5:
          type: string
          example: DDDDD
          description: グループ ID 5
          pattern: '^[A-Za-z0-9]{0,30}$'
          maxLength: 30
      required:
        - company_type
        - name
        - kana
        - post_code
        - address
        - tel_no1
        - customer_id
        - group_id1
    CompanyType:
      title: CompanyType
      description: Types for 企業
      oneOf:
        - properties: {}
          example: 0
          description: システム管理企業
          maximum: 0
          minimum: 0
        - properties: {}
          example: 1
          description: EMS 運営企業
          maximum: 1
          minimum: 1
        - properties: {}
          example: 2
          description: 運用企業
          maximum: 2
          minimum: 2
        - properties: {}
          example: 100
          minimum: 100
          maximum: 100
          description: 個人型需要家
        - properties: {}
          minimum: 101
          maximum: 101
          example: 101
          description: 企業型需要家
      type: integer
